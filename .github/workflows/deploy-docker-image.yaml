name: Build and deploy docker image

on:
    workflow_dispatch:
    push:
        branches:
            - "main"
            - "monitix-agent" #TODO: REMOVE
        tags:
            - "v*"
    pull_request:
        branches:
            - "main"

jobs:
    docker:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - dockerfile: docker/Dockerfile
                      image: bastianlo/monitix
                      context: .
                    - dockerfile: agent/Dockerfile
                      image: bastianlo/monitix-agent
                      context: agent
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ matrix.image }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=sha,enable=${{ github.ref_type != 'tag' }}
            - name: Login to DockerHub
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: ${{ matrix.context }}
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  file: ${{ matrix.dockerfile }}
                  platforms: linux/amd64,linux/arm64
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
